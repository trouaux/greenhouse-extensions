name: Bump plugindefinition.yaml version on Chart.yaml change

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  bump-version:
    if: github.actor == 'renovate[bot]'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Find changed Chart.yaml files
        id: chartdiff
        run: |
          git fetch origin ${{ github.base_ref }}
          files=$(git diff --name-only origin/${{ github.base_ref }} HEAD | grep 'charts/Chart.yaml$' || true)
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$files" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Determine update level from PR description
        id: update_level
        run: |
          body="${{ github.event.pull_request.body }}"
          echo "$body" | awk -F'|' '/\|/ && !/---/ && /->/ {gsub(/^[ \t]+|[ \t]+$/, "", $3); print $3}' >> $GITHUB_OUTPUT
        
      - name: Bump spec.version in plugindefinition.yaml
        run: |
          echo "${{ steps.chartdiff.outputs.files }}" | while read -r file; do
          [ -z "$file" ] && continue
            echo $file
            oldver=$(grep 'spec:[[:space:]]*version:' "$file" | awk '{print $2}')
            echo $oldver
            level="${{ steps.update_level.outputs.level }}"
            echo "$level"
            if [ "$level" = "major" ]; then
            major=$((major+1)); minor=0; patch=0
            elif [ "$level" = "minor" ]; then
            minor=$((minor+1)); patch=0
            else
            patch=$((patch+1))
            fi
            newver="$major.$minor.$patch"

            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add "$file"
            git commit -m "chore: bump spec.version in $file to $newver"
          done
          git pull --rebase origin ${GITHUB_HEAD_REF}
          git push origin HEAD:${GITHUB_HEAD_REF}