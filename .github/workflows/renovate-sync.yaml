name: Bump plugindefinition.yaml version on Chart.yaml change

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  bump-version:
    if: github.actor == 'renovate[bot]'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Find changed Chart.yaml files
        id: chartdiff
        run: |
          git fetch origin ${{ github.base_ref }}
          files=$(git diff --name-only origin/${{ github.base_ref }} HEAD | grep 'charts/Chart.yaml$' || true)
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$files" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Determine update level from PR description
        id: update_level
        run: |
          body="$PR_BODY"

          # Extract all update levels from the table
          levels=$(echo "$body" | grep -Eo '\|\s*(major|minor|patch)\s*\|' | grep -Eo '(major|minor|patch)')

          # Set priority: major > minor > patch
          update_level="patch"
          if echo "$levels" | grep -q 'major'; then
            update_level="major"
          elif echo "$levels" | grep -q 'minor'; then
            update_level="minor"
          fi

          echo "update_level=$update_level" >> $GITHUB_OUTPUT
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
      
      - name: Sync plugindefinition.yaml version with Chart.yaml
        if: steps.update_level.outputs.update_level != ''
        run: |
          set -e
          for chart in ${{ steps.chartdiff.outputs.files }}; do
            # Get the root directory (parent of charts/)
            root_dir=$(dirname "$(dirname "$chart")")
            # Get the chart version from Chart.yaml
            chart_version=$(grep '^version:' "$chart" | awk '{print $2}')
            # Find plugindefinition.yaml in the root directory
            plugin_yaml="$root_dir/plugindefinition.yaml"
            if [ -f "$plugin_yaml" ]; then
              # Update spec.helmChart.version in plugindefinition.yaml
              yq e -i ".spec.helmChart.version = \"$chart_version\"" "$plugin_yaml"
              echo "Updated $plugin_yaml to version $chart_version"
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add "$plugin_yaml"
              git commit -m "chore: bump spec.helmChart.version in $plugin_yaml to $chart_version"
            else
              echo "No plugindefinition.yaml found for $chart"
            fi
          done
          git pull --rebase origin ${GITHUB_HEAD_REF}
          git push origin HEAD:${GITHUB_HEAD_REF}
        env:
          # yq is pre-installed on GitHub runners, but you can add a setup step if needed
          # Ensure files is available as a space-separated list
          files: ${{ steps.chartdiff.outputs.files }}